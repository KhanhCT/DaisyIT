package edu.sfsu.cs.orange.googlemap;

import java.io.IOException;
import java.util.ArrayList;

import edu.sfsu.cs.orange.ocr.R;
import edu.sfsu.cs.orange.ocr.R.id;
import edu.sfsu.cs.orange.ocr.R.layout;
import edu.sfsu.cs.orange.ocr.R.menu;
import edu.sfsu.cs.orange.printerTSCAlpla3R.TSCAlpla3RPrinter;
import android.support.v4.app.FragmentActivity;
import android.app.Dialog;
import android.content.Intent;
import android.location.Address;
import android.location.Criteria;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.GoogleMap.OnInfoWindowClickListener;
import com.google.android.gms.maps.GoogleMap.OnMapLongClickListener;
import com.google.android.gms.maps.model.BitmapDescriptorFactory;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;

public class GoogleMap extends FragmentActivity implements LocationListener {
	public static final String TAG="GoogleMAP";
	public com.google.android.gms.maps.GoogleMap googleMap;
	public static String title = "Location";
	public static final String macBluetooth="";
	double mLatitude=0;
	double mLongitude=0;
	ArrayList<Address> address;
	Geocoder geogle;
	String Mylocation="";
	public static final int REQUEST_CODE_ROUTER = 17;
//	private TSCAlpla3RPrinter tscPrinter;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.googlemap);
		//tscPrinter = new TSCAlpla3RPrinter(macBluetooth, 70, 110, 4, 4, 0, 0, 0);
		//tscPrinter.ConfigTSCAlpla3R();
		 int status = GooglePlayServicesUtil.isGooglePlayServicesAvailable(getBaseContext());       
	        if(status!=ConnectionResult.SUCCESS){ // Google Play Services are not available
	        	int requestCode = 10;
	            Dialog dialog = GooglePlayServicesUtil.getErrorDialog(status, this, requestCode);
	            dialog.show();
	        }
	        else{
	        Log.i(TAG, "Starting....");
	    	SupportMapFragment fragment = ( SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.gMap);			
	    	// Getting Google Map
	    	googleMap = fragment.getMap();
	    	geogle=new Geocoder(this);		
	        
	    	// Getting LocationManager object from System Service LOCATION_SERVICE
            LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
            locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, this);
            // Creating a criteria object to retrieve provider
            Criteria criteria = new Criteria();

            // Getting the name of the best provider
            String provider = locationManager.getBestProvider(criteria, true);

            // Getting Current Location From GPS
            Location location = locationManager.getLastKnownLocation(provider);

            if(location!=null){
                    onLocationChanged(location);
            }
            if(mLatitude!=0)
            {
            LatLng latLng = new LatLng(mLatitude, mLongitude);
	    	googleMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));
			googleMap.animateCamera(CameraUpdateFactory.zoomTo(16));
            }
            googleMap.setOnInfoWindowClickListener(new OnInfoWindowClickListener() {
				
				@Override
				public void onInfoWindowClick(Marker marker) {
					// TODO Auto-generated method stub
					Intent i=new Intent(android.content.Intent.ACTION_SENDTO,Uri.parse("sms:"));
					i.putExtra("sms_body",marker.getTitle());
					startActivity(i);
				}
			});
            googleMap.setOnMapLongClickListener(new OnMapLongClickListener() {
				
				@Override
				public void onMapLongClick(LatLng point) {
					// TODO Auto-generated method stub
					googleMap.clear();
				}
			});
	        }
	}
	@Override
	protected void onResumeFragments() {
		// TODO Auto-generated method stub
		super.onResumeFragments();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.google_map, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		switch (id) {
		case R.id.action_settings:

			break;
		case R.id.router:{
			Bundle bundle = new Bundle();
			bundle.putDouble("latitude", mLatitude);
			bundle.putDouble("Longitude", mLongitude);
			Intent intent = new Intent(GoogleMap.this, Router.class);
			intent.putExtras(bundle);
			startActivityForResult(intent, REQUEST_CODE_ROUTER);
			
		}break;
		case R.id.nearby:{
			
		}break;
		case R.id.viewLocation:{
			try {
				address = (ArrayList<Address>) geogle.getFromLocation(mLatitude, mLatitude, 3);
				String item1 ="";
				item1 = address.get(0).getAddressLine(0);
				if(item1.equals("")){
					Toast.makeText(getApplicationContext(), "Cannot Find My Location", Toast.LENGTH_SHORT).show();
				}
				else
				{
					Toast.makeText(getApplicationContext(), item1, Toast.LENGTH_SHORT).show();
					String myLocation = item1;
					MarkerOptions marker=new MarkerOptions();
			    	marker.position(new LatLng(mLatitude, mLongitude));
			    	marker.title(myLocation);
			    	marker.snippet("My Location");
			    	marker.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_YELLOW));
			    	
			    	googleMap.clear();
			    	googleMap.addMarker(marker);
				}
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				Log.i(TAG,"Not Address!!");
			}
			
		}break;
		case R.id.print:{
			
		}break;
		case R.id.vehicles:{
			
		}break;
		default:
			break;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onLocationChanged(Location location) {
		// TODO Auto-generated method stub
			mLatitude = location.getLatitude();
			mLongitude = location.getLongitude();
//			MarkerOptions marker=new MarkerOptions();
//	    	marker.position(new LatLng(mLatitude, mLongitude));
//	    	marker.title(title);
//	    	marker.snippet("My Location");
//	    	marker.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_BLUE));
//	    	googleMap.clear();
//	    	googleMap.addMarker(marker);    	
	}

	@Override
	public void onProviderDisabled(String arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onProviderEnabled(String arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onStatusChanged(String arg0, int arg1, Bundle arg2) {
		// TODO Auto-generated method stub
		
	}
}
